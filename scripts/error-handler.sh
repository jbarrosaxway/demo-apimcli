#!/bin/bash

# Script para tratamento inteligente de c√≥digos de erro do Axway API Management CLI
# Baseado na documenta√ß√£o oficial: https://github.com/Axway-API-Management-Plus/apim-cli/wiki/9.6-Error-Codes

# Cores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
NC='\033[0m' # No Color

# Fun√ß√£o para tratar c√≥digos de erro
handle_exit_code() {
    local exit_code=$1
    local operation=$2  # "import", "update", "export", etc.
    
    echo -e "\n${CYAN}üîç Analisando c√≥digo de sa√≠da: $exit_code${NC}"
    
    case $exit_code in
        0)
            echo -e "${GREEN}‚úÖ Sucesso! Opera√ß√£o $operation conclu√≠da com √™xito.${NC}"
            return 0
            ;;
        
        # === C√ìDIGOS QUE N√ÉO S√ÉO ERROS (BYPASS) ===
        10)
            echo -e "${GREEN}‚úÖ Sucesso! Nenhuma mudan√ßa detectada entre a API desejada e a atual.${NC}"
            echo -e "${BLUE}‚ÑπÔ∏è  A API j√° est√° atualizada no API Manager.${NC}"
            echo -e "${BLUE}‚ÑπÔ∏è  Isso √© normal quando n√£o h√° altera√ß√µes na configura√ß√£o.${NC}"
            return 0
            ;;
        
        12)
            echo -e "${YELLOW}‚ö†Ô∏è  Aviso: Pasta de exporta√ß√£o j√° existe.${NC}"
            echo -e "${BLUE}‚ÑπÔ∏è  A pasta de destino j√° cont√©m arquivos exportados.${NC}"
            echo -e "${BLUE}‚ÑπÔ∏è  Considere limpar a pasta antes da pr√≥xima exporta√ß√£o.${NC}"
            return 0
            ;;
        
        101)
            echo -e "${YELLOW}‚ö†Ô∏è  Aviso: Certificados encontrados que expiram em breve.${NC}"
            echo -e "${BLUE}‚ÑπÔ∏è  Verifique os certificados que est√£o pr√≥ximos do vencimento.${NC}"
            echo -e "${BLUE}‚ÑπÔ∏è  Considere renovar os certificados em breve.${NC}"
            return 0
            ;;
        
        # === ERROS DE CONFIGURA√á√ÉO (FALHA CONTROLADA) ===
        1)
            echo -e "${RED}‚ùå Erro: Especifica√ß√£o da API n√£o √© suportada pelo APIM-CLI.${NC}"
            echo -e "${PURPLE}üí° Verifique se o formato da especifica√ß√£o √© compat√≠vel.${NC}"
            return 1
            ;;
        
        2)
            echo -e "${RED}‚ùå Erro: Erro na an√°lise dos par√¢metros de entrada.${NC}"
            echo -e "${PURPLE}üí° Verifique a sintaxe dos par√¢metros fornecidos.${NC}"
            return 1
            ;;
        
        5)
            echo -e "${RED}‚ùå Erro: Par√¢metro obrigat√≥rio ausente.${NC}"
            echo -e "${PURPLE}üí° Verifique se todos os par√¢metros obrigat√≥rios foram fornecidos.${NC}"
            return 1
            ;;
        
        6)
            echo -e "${RED}‚ùå Erro: Par√¢metro inv√°lido fornecido.${NC}"
            echo -e "${PURPLE}üí° Verifique o valor e formato dos par√¢metros.${NC}"
            return 1
            ;;
        
        7)
            echo -e "${RED}‚ùå Erro: API j√° existe para outra organiza√ß√£o.${NC}"
            echo -e "${PURPLE}üí° Verifique se a API n√£o est√° sendo usada por outra organiza√ß√£o.${NC}"
            return 1
            ;;
        
        8)
            echo -e "${RED}‚ùå Erro: Defini√ß√£o da API backend n√£o est√° dispon√≠vel.${NC}"
            echo -e "${PURPLE}üí° Verifique se o arquivo de especifica√ß√£o existe e √© acess√≠vel.${NC}"
            return 1
            ;;
        
        13)
            echo -e "${RED}‚ùå Erro: Cria√ß√£o de nova API falhou quando flag updateOnly est√° definido.${NC}"
            echo -e "${PURPLE}üí° A API n√£o existe e o modo updateOnly foi especificado.${NC}"
            return 1
            ;;
        
        15)
            echo -e "${RED}‚ùå Erro: Mudan√ßa breaking detectada, mas flag force n√£o foi fornecida.${NC}"
            echo -e "${PURPLE}üí° Use a flag -force para aplicar mudan√ßas breaking.${NC}"
            return 1
            ;;
        
        17)
            echo -e "${RED}‚ùå Erro: A√ß√£o falhou devido a conta de administrador ausente.${NC}"
            echo -e "${PURPLE}üí° Verifique as credenciais de administrador.${NC}"
            return 1
            ;;
        
        # === ERROS DE COMUNICA√á√ÉO (FALHA) ===
        20)
            echo -e "${RED}‚ùå Erro: N√£o foi poss√≠vel analisar resposta HTTP para chamada REST-API.${NC}"
            echo -e "${PURPLE}üí° Verifique a conectividade com o API Manager.${NC}"
            return 1
            ;;
        
        25)
            echo -e "${RED}‚ùå Erro: N√£o foi poss√≠vel enviar requisi√ß√£o HTTP.${NC}"
            echo -e "${PURPLE}üí° Verifique a conectividade de rede e firewall.${NC}"
            return 1
            ;;
        
        30)
            echo -e "${RED}‚ùå Erro: N√£o foi poss√≠vel ler ou analisar payload JSON.${NC}"
            echo -e "${PURPLE}üí° Verifique o formato da resposta do API Manager.${NC}"
            return 1
            ;;
        
        60)
            echo -e "${RED}‚ùå Erro: Erro gen√©rico de comunica√ß√£o com API-Manager.${NC}"
            echo -e "${PURPLE}üí° Verifique a conectividade e configura√ß√£o do API Manager.${NC}"
            return 1
            ;;
        
        63)
            echo -e "${RED}‚ùå Erro: Host remoto desconhecido fornecido.${NC}"
            echo -e "${PURPLE}üí° Verifique o endere√ßo IP/hostname do API Manager.${NC}"
            return 1
            ;;
        
        67)
            echo -e "${RED}‚ùå Erro: Login no API-Manager falhou.${NC}"
            echo -e "${PURPLE}üí° Verifique usu√°rio, senha e permiss√µes.${NC}"
            return 1
            ;;
        
        69)
            echo -e "${RED}‚ùå Erro: Erro inesperado de comunica√ß√£o com API-Manager.${NC}"
            echo -e "${PURPLE}üí° Verifique logs do API Manager para mais detalhes.${NC}"
            return 1
            ;;
        
        # === ERROS DE ARQUIVO/CONFIGURA√á√ÉO (FALHA) ===
        64)
            echo -e "${RED}‚ùå Erro: Nenhuma especifica√ß√£o de API configurada.${NC}"
            echo -e "${PURPLE}üí° Verifique se o arquivo de especifica√ß√£o est√° definido.${NC}"
            return 1
            ;;
        
        65)
            echo -e "${RED}‚ùå Erro: N√£o foi poss√≠vel ler a defini√ß√£o da API fornecida.${NC}"
            echo -e "${PURPLE}üí° Verifique se o arquivo de especifica√ß√£o existe e √© v√°lido.${NC}"
            return 1
            ;;
        
        66)
            echo -e "${RED}‚ùå Erro: N√£o foi poss√≠vel ler o arquivo WSDL fornecido.${NC}"
            echo -e "${PURPLE}üí° Verifique se o arquivo WSDL existe e √© v√°lido.${NC}"
            return 1
            ;;
        
        70)
            echo -e "${RED}‚ùå Erro: N√£o foi poss√≠vel ler o arquivo de configura√ß√£o da API.${NC}"
            echo -e "${PURPLE}üí° Verifique se o arquivo de configura√ß√£o existe e √© v√°lido.${NC}"
            return 1
            ;;
        
        # === ERROS DE ENTIDADES (FALHA) ===
        51)
            echo -e "${RED}‚ùå Erro: Usu√°rio desconhecido fornecido.${NC}"
            echo -e "${PURPLE}üí° Verifique se o usu√°rio existe no API Manager.${NC}"
            return 1
            ;;
        
        56)
            echo -e "${RED}‚ùå Erro: API √© desconhecida/n√£o encontrada.${NC}"
            echo -e "${PURPLE}üí° Verifique se a API existe no API Manager.${NC}"
            return 1
            ;;
        
        57)
            echo -e "${RED}‚ùå Erro: Organiza√ß√£o desconhecida fornecida.${NC}"
            echo -e "${PURPLE}üí° Verifique se a organiza√ß√£o existe no API Manager.${NC}"
            return 1
            ;;
        
        58)
            echo -e "${RED}‚ùå Erro: Aplica√ß√£o desconhecida fornecida.${NC}"
            echo -e "${PURPLE}üí° Verifique se a aplica√ß√£o existe no API Manager.${NC}"
            return 1
            ;;
        
        89)
            echo -e "${RED}‚ùå Erro: O nome da aplica√ß√£o fornecido n√£o √© √∫nico.${NC}"
            echo -e "${PURPLE}üí° Mais de uma aplica√ß√£o foi encontrada com este nome.${NC}"
            return 1
            ;;
        
        # === ERROS DE OPERA√á√ÉO (FALHA) ===
        35)
            echo -e "${RED}‚ùå Erro: N√£o foi poss√≠vel criar API-Proxy (FE-API).${NC}"
            echo -e "${PURPLE}üí° Verifique permiss√µes e configura√ß√£o do API Manager.${NC}"
            return 1
            ;;
        
        40)
            echo -e "${RED}‚ùå Erro: N√£o foi poss√≠vel importar defini√ß√£o Swagger.${NC}"
            echo -e "${PURPLE}üí° Verifique se a defini√ß√£o Swagger √© v√°lida.${NC}"
            return 1
            ;;
        
        45)
            echo -e "${RED}‚ùå Erro: N√£o foi poss√≠vel atualizar API-Proxy (FE-API).${NC}"
            echo -e "${PURPLE}üí° Verifique permiss√µes e configura√ß√£o do API Manager.${NC}"
            return 1
            ;;
        
        47)
            echo -e "${RED}‚ùå Erro: N√£o foi poss√≠vel atualizar configura√ß√£o de Quota.${NC}"
            echo -e "${PURPLE}üí° Verifique a configura√ß√£o de quota fornecida.${NC}"
            return 1
            ;;
        
        50)
            echo -e "${RED}‚ùå Erro: N√£o foi poss√≠vel atualizar o status da API.${NC}"
            echo -e "${PURPLE}üí° Verifique permiss√µes e estado atual da API.${NC}"
            return 1
            ;;
        
        90)
            echo -e "${RED}‚ùå Erro: API n√£o p√¥de ser aprovada.${NC}"
            echo -e "${PURPLE}üí° Verifique permiss√µes e estado atual da API.${NC}"
            return 1
            ;;
        
        91)
            echo -e "${RED}‚ùå Erro: API n√£o p√¥de ser deletada.${NC}"
            echo -e "${PURPLE}üí° Verifique permiss√µes e depend√™ncias da API.${NC}"
            return 1
            ;;
        
        96)
            echo -e "${RED}‚ùå Erro: API n√£o p√¥de ser alterada para estado publicado.${NC}"
            echo -e "${PURPLE}üí° Verifique permiss√µes e configura√ß√£o da API.${NC}"
            return 1
            ;;
        
        97)
            echo -e "${RED}‚ùå Erro: API n√£o p√¥de ser alterada para estado n√£o publicado.${NC}"
            echo -e "${PURPLE}üí° Verifique permiss√µes e configura√ß√£o da API.${NC}"
            return 1
            ;;
        
        # === ERROS DE SEGURAN√áA/CONFIGURA√á√ÉO (FALHA) ===
        52)
            echo -e "${RED}‚ùå Erro: Erro ao alterar senha do usu√°rio.${NC}"
            echo -e "${PURPLE}üí° Verifique permiss√µes e pol√≠tica de senhas.${NC}"
            return 1
            ;;
        
        53)
            echo -e "${RED}‚ùå Erro: Op√ß√£o de roteamento Query-String n√£o est√° habilitada no API-Manager.${NC}"
            echo -e "${PURPLE}üí° Habilite a op√ß√£o de roteamento Query-String no API Manager.${NC}"
            return 1
            ;;
        
        54)
            echo -e "${RED}‚ùå Erro: A configura√ß√£o da API precisa de query string, mas API-Manager n√£o tem habilitado.${NC}"
            echo -e "${PURPLE}üí° Configure query string na API ou habilite no API Manager.${NC}"
            return 1
            ;;
        
        73)
            echo -e "${RED}‚ùå Erro: Refer√™ncia de perfil inv√°lida usada.${NC}"
            echo -e "${PURPLE}üí° Verifique se os perfis referenciados existem e s√£o compat√≠veis.${NC}"
            return 1
            ;;
        
        104)
            echo -e "${RED}‚ùå Erro: O perfil de seguran√ßa fornecido √© inv√°lido.${NC}"
            echo -e "${PURPLE}üí° Verifique a configura√ß√£o do perfil de seguran√ßa.${NC}"
            return 1
            ;;
        
        # === ERROS DE PERMISS√ÉO/ACESSO (FALHA) ===
        55)
            echo -e "${RED}‚ùå Erro: N√£o foi poss√≠vel atualizar acesso √† API.${NC}"
            echo -e "${PURPLE}üí° Verifique permiss√µes e configura√ß√£o de acesso.${NC}"
            return 1
            ;;
        
        59)
            echo -e "${RED}‚ùå Erro: Erro ao gerenciar permiss√µes da organiza√ß√£o.${NC}"
            echo -e "${PURPLE}üí° Verifique permiss√µes e configura√ß√£o da organiza√ß√£o.${NC}"
            return 1
            ;;
        
        93)
            echo -e "${RED}‚ùå Erro: Erro ao conceder acesso √† API.${NC}"
            echo -e "${PURPLE}üí° Verifique permiss√µes e configura√ß√£o de acesso.${NC}"
            return 1
            ;;
        
        102)
            echo -e "${RED}‚ùå Erro: Erro ao conceder acesso da aplica√ß√£o √† API.${NC}"
            echo -e "${PURPLE}üí° Verifique permiss√µes e configura√ß√£o da aplica√ß√£o.${NC}"
            return 1
            ;;
        
        103)
            echo -e "${RED}‚ùå Erro: Erro ao revogar acesso da aplica√ß√£o √† API.${NC}"
            echo -e "${PURPLE}üí° Verifique permiss√µes e configura√ß√£o da aplica√ß√£o.${NC}"
            return 1
            ;;
        
        # === ERROS DE VALIDA√á√ÉO (FALHA) ===
        61)
            echo -e "${RED}‚ùå Erro: Pelo menos uma organiza√ß√£o configurada √© inv√°lida.${NC}"
            echo -e "${PURPLE}üí° Verifique o arquivo de log para mais informa√ß√µes.${NC}"
            return 1
            ;;
        
        62)
            echo -e "${RED}‚ùå Erro: Pelo menos uma aplica√ß√£o configurada √© inv√°lida.${NC}"
            echo -e "${PURPLE}üí° Verifique o arquivo de log para mais informa√ß√µes.${NC}"
            return 1
            ;;
        
        71)
            echo -e "${RED}‚ùå Erro: A configura√ß√£o de Quota fornecida √© inv√°lida.${NC}"
            echo -e "${PURPLE}üí° Verifique a configura√ß√£o de quota.${NC}"
            return 1
            ;;
        
        72)
            echo -e "${RED}‚ùå Erro: O operationId fornecido n√£o pode ser encontrado.${NC}"
            echo -e "${PURPLE}üí° Verifique se o operationId existe na especifica√ß√£o da API.${NC}"
            return 1
            ;;
        
        75)
            echo -e "${RED}‚ùå Erro: Funcionalidade n√£o suportada.${NC}"
            echo -e "${PURPLE}üí° Verifique se a funcionalidade √© suportada nesta vers√£o.${NC}"
            return 1
            ;;
        
        76)
            echo -e "${RED}‚ùå Erro: O backend basepath fornecido n√£o √© uma URL v√°lida.${NC}"
            echo -e "${PURPLE}üí° Verifique o formato da URL do backend.${NC}"
            return 1
            ;;
        
        80)
            echo -e "${RED}‚ùå Erro: N√£o foi poss√≠vel comparar as APIs Desejada e Atual.${NC}"
            echo -e "${PURPLE}üí° Verifique se ambas as APIs est√£o acess√≠veis.${NC}"
            return 1
            ;;
        
        81)
            echo -e "${RED}‚ùå Erro: A senha do keystore est√° incorreta.${NC}"
            echo -e "${PURPLE}üí° Verifique a senha do keystore.${NC}"
            return 1
            ;;
        
        85)
            echo -e "${RED}‚ùå Erro: Nome de pol√≠tica customizada √© desconhecido.${NC}"
            echo -e "${PURPLE}üí° Verifique se a pol√≠tica existe no API Manager.${NC}"
            return 1
            ;;
        
        87)
            echo -e "${RED}‚ùå Erro: N√£o foi poss√≠vel configurar o V-Host para a FE-API.${NC}"
            echo -e "${PURPLE}üí° Verifique a configura√ß√£o do V-Host.${NC}"
            return 1
            ;;
        
        88)
            echo -e "${RED}‚ùå Erro: N√£o foi poss√≠vel criar cliente HTTP.${NC}"
            echo -e "${PURPLE}üí° Verifique configura√ß√£o de rede e proxy.${NC}"
            return 1
            ;;
        
        92)
            echo -e "${RED}‚ùå Erro: Organiza√ß√£o n√£o p√¥de ser deletada.${NC}"
            echo -e "${PURPLE}üí° Verifique depend√™ncias e permiss√µes da organiza√ß√£o.${NC}"
            return 1
            ;;
        
        94)
            echo -e "${RED}‚ùå Erro: Erro ao exportar arquivo de dados da API.${NC}"
            echo -e "${PURPLE}üí° Verifique permiss√µes e espa√ßo em disco.${NC}"
            return 1
            ;;
        
        95)
            echo -e "${RED}‚ùå Erro: Erro ao criar/atualizar aplica√ß√£o.${NC}"
            echo -e "${PURPLE}üí° Verifique permiss√µes e configura√ß√£o da aplica√ß√£o.${NC}"
            return 1
            ;;
        
        100)
            echo -e "${RED}‚ùå Erro: Erro inesperado ao verificar data de expira√ß√£o de certificados.${NC}"
            echo -e "${PURPLE}üí° Verifique configura√ß√£o de certificados.${NC}"
            return 1
            ;;
        
        68)
            echo -e "${RED}‚ùå Erro: Host remoto √∫nico baseado no filtro fornecido n√£o p√¥de ser encontrado.${NC}"
            echo -e "${PURPLE}üí° Verifique o filtro de host remoto fornecido.${NC}"
            return 1
            ;;
        
        # === ERRO GEN√âRICO (FALHA) ===
        99)
            echo -e "${RED}‚ùå Erro: Ocorreu um erro inesperado.${NC}"
            echo -e "${PURPLE}üí° Verifique logs detalhados para mais informa√ß√µes.${NC}"
            return 1
            ;;
        
        # === C√ìDIGO DESCONHECIDO ===
        *)
            echo -e "${RED}‚ùå Erro: C√≥digo de sa√≠da desconhecido: $exit_code${NC}"
            echo -e "${PURPLE}üí° Este c√≥digo n√£o est√° documentado. Verifique logs para mais detalhes.${NC}"
            return 1
            ;;
    esac
}

# Fun√ß√£o para executar comando e tratar erro
execute_with_error_handling() {
    local command="$1"
    local operation="$2"
    
    echo -e "${BLUE}üöÄ Executando: $operation${NC}"
    echo -e "${CYAN}üìã Comando: $command${NC}"
    
    # Executar o comando
    eval "$command"
    
    # Capturar c√≥digo de sa√≠da
    local exit_code=$?
    
    # Tratar o c√≥digo de sa√≠da
    handle_exit_code $exit_code "$operation"
    
    return $?
}

# Fun√ß√£o para mostrar resumo dos c√≥digos de erro
show_error_codes_summary() {
    echo -e "\n${PURPLE}üìö Resumo dos C√≥digos de Erro do Axway API Management CLI${NC}"
    echo -e "${CYAN}=====================================================${NC}"
    echo -e "${GREEN}‚úÖ C√≥digos que N√ÉO falham o pipeline (BYPASS):${NC}"
    echo -e "  ‚Ä¢ 0  - Sucesso"
    echo -e "  ‚Ä¢ 10 - Nenhuma mudan√ßa detectada"
    echo -e "  ‚Ä¢ 12 - Pasta de exporta√ß√£o j√° existe"
    echo -e "  ‚Ä¢ 101 - Certificados expiram em breve (aviso)"
    echo -e ""
    echo -e "${RED}‚ùå C√≥digos que FALHAM o pipeline (ERRO REAL):${NC}"
    echo -e "  ‚Ä¢ 1-99, 102-104 - Erros de configura√ß√£o, comunica√ß√£o, permiss√£o, etc."
    echo -e ""
    echo -e "${YELLOW}üìñ Documenta√ß√£o completa:${NC}"
    echo -e "  https://github.com/Axway-API-Management-Plus/apim-cli/wiki/9.6-Error-Codes"
}

# Se executado diretamente, mostrar resumo
if [[ "${BASH_SOURCE[0]}" == "${0}" ]]; then
    show_error_codes_summary
fi 