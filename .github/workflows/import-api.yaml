name: import-apiconfig
on:
  workflow_call:
    inputs:
      config-file:
        description: "config file need to be imported"
        type: string
        required: true
  workflow_dispatch:
    inputs:
      config-file:
        description: "config file need to be imported"
        type: string
        required: true
jobs:
  import_api:
    runs-on: ubuntu-latest
    environment: DEMO
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: import api definitions
        run: |
          echo "Getting API definition..."
          echo "Processing ${{ inputs.config-file }} config file"
          config_file_name=$(basename ${{ inputs.config-file }})
          current_folder=$(dirname ${{ inputs.config-file }})
          API_DEFINITION_FILE_NAME=$(jq -r '.apiSpecification.resource' ${{ inputs.config-file }} | xargs basename)
          echo "API definition: $API_DEFINITION_FILE_NAME"
          path=$(jq -r '.path' ${{ inputs.config-file }})
          echo "Importing API with apim-cli using config file: ${{ inputs.config-file }}"
          echo "API path: $path"
          docker run --name apim-cli \
          -e LOG_LEVEL=DEBUG -v "${{ github.workspace }}/${{ inputs.config-file }}:/$config_file_name" \
          -v "${{ github.workspace }}/$current_folder/$API_DEFINITION_FILE_NAME:/$API_DEFINITION_FILE_NAME" bvieira123/apim-cli:1.14.4  \
          apim api import -h ${{ vars.APIM_INSTANCE_IP }} -u ${{ vars.APIM_INSTANCE_USER }} -port 8075 \
          -p ${{ secrets.APIM_INSTANCE_PASSWORD }} -c "/$config_file_name"
          docker rm apim-cli -f
      - name: Cleanup
        if: failure()
        run: |
          docker rm apim-cli -f
