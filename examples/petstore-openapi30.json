{
  "openapi": "3.0.0",
  "info": {
    "title": "Petstore API",
    "description": "A sample Petstore API for testing APIM CLI workflows",
    "version": "1.0.17",
    "contact": {
      "name": "API Support",
      "email": "support@example.com"
    }
  },
  "servers": [
    {
      "url": "https://petstore3.swagger.io",
      "description": "Production server"
    }
  ],
  "paths": {
    "/pets": {
      "get": {
        "summary": "List all pets",
        "description": "Returns a list of pets",
        "operationId": "listPets",
        "tags": ["pets"],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of pets to return",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 20
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of pets",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Pet"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a pet",
        "description": "Creates a new pet",
        "operationId": "createPet",
        "tags": ["pets"],
        "requestBody": {
          "description": "Pet to create",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Pet"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Pet created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pet"
                }
              }
            }
          }
        }
      }
    },
    "/pets/{petId}": {
      "get": {
        "summary": "Get pet by ID",
        "description": "Returns a single pet",
        "operationId": "getPet",
        "tags": ["pets"],
        "parameters": [
          {
            "name": "petId",
            "in": "path",
            "description": "ID of the pet to retrieve",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Pet found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pet"
                }
              }
            }
          },
          "404": {
            "description": "Pet not found"
          }
        }
      },
      "delete": {
        "summary": "Delete pet",
        "description": "Deletes a pet",
        "operationId": "deletePet",
        "tags": ["pets"],
        "parameters": [
          {
            "name": "petId",
            "in": "path",
            "description": "ID of the pet to delete",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Pet deleted successfully"
          },
          "404": {
            "description": "Pet not found"
          }
        }
      }
    },
    "/users": {
      "post": {
        "summary": "Create user",
        "description": "Creates a new user",
        "operationId": "createUser",
        "tags": ["users"],
        "requestBody": {
          "description": "User to create",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created successfully"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Pet": {
        "type": "object",
        "required": ["id", "name"],
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique identifier for the pet"
          },
          "name": {
            "type": "string",
            "description": "Name of the pet"
          },
          "tag": {
            "type": "string",
            "description": "Tag of the pet"
          }
        }
      },
      "User": {
        "type": "object",
        "required": ["id", "username"],
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique identifier for the user"
          },
          "username": {
            "type": "string",
            "description": "Username of the user"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "Email of the user"
          }
        }
      }
    }
  }
} 